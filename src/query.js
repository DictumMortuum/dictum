"use strict";

(function() {
  var unit = function(db) {
    var api = {}

    function parse(start, end) {
      var options = {}

      if(start !== undefined) {
        options.start = start
      }

      if(end !== undefined) {
        options.end = end
      }

      return options
    }

    api.day = function(start, end) {
      var lookup = []

      function callback(doc) {
        var day = doc._id.slice(0,10)

        if(lookup[day] === undefined) {
          lookup[day] = 1
        } else {
          lookup[day]++
        }
      }

      return new Promise(function(resolve, reject) {
        db.query(callback, parse(start, end)).then(function() {
          resolve(lookup)
        })
      })
    }

    api.tool = function(start, end) {
      var lookup = []

      function callback(doc) {
        if(doc.lang !== undefined) {
          for(var i = 0; i < doc.lang.length; i++) {
            var lang = doc.lang[i].toLowerCase()

            if(lookup[lang] === undefined) {
              lookup[lang] = 1
            } else {
              lookup[lang]++
            }
          }
        }
      }

      return new Promise(function(resolve, reject) {
        db.query(callback, parse(start, end)).then(function() {
          resolve(lookup)
        })
      })
    }

    //weight is generated by day()
    //pass an empty array as weight to treat all the job types the same.

    api.type = function(start, end, weight) {
      var lookup = []

      function callback(doc) {
        if(doc.type !== undefined) {
          var day = doc._id.slice(0,10)
          var w = 1 / weight[day] || 1

          if(lookup[doc.type] === undefined) {
            lookup[doc.type] = w
          } else {
            lookup[doc.type] += w
          }
        }
      }

      return new Promise(function(resolve, reject) {
        db.query(callback, parse(start, end)).then(function() {
          resolve(lookup)
        })
      })
    }

    return api
  }

  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {
    module.exports = unit
  } else {
    window.dictum = window.dictum || {}
    window.dictum.query = unit
  }
})();
